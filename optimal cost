#include <stdio.h>

#define N 5 // Number of items
#define W 10 // Knapsack capacity

int weights[N] = {2, 3, 4, 5, 6};
int values[N] = {10, 20, 30, 40, 50};

int knapsack(int n, int w) {
    int dp[n+1][w+1];

    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= w; j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0;
            } else if (weights[i-1] <= j) {
                dp[i][j] = max(values[i-1] + dp[i-1][j-weights[i-1]], dp[i-1][j]);
            } else {
                dp[i][j] = dp[i-1][j];
            }
        }
    }

    return dp[n][w];
}

int max(int a, int b) {
    return (a > b) ? a : b;
}

int main() {
    printf("Optimal cost: %d\n", knapsack(N, W));
    printf("B Manohar - 192211557\n");
    return 0;
}
